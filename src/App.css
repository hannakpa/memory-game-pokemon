html{
  position:relative;
  min-height: 100vh;
}

.App {
  text-align: center;
  max-width: 800px;
  margin: 4rem auto;
  color: black;
  font-size: 1.7rem;
  position:relative;
}



button {
  background: none;
  border: 2px solid rgb(44, 33, 33);
  border-radius: 4px;
  padding: 0.5rem;
  cursor: pointer;
  color: rgb(49, 39, 39);
  font-size: 1.2rem;


}

button:hover{
  background:rgb(119, 119, 255);
  color: whitesmoke;
  border: 2px solid rgb(255, 255, 255);
}


.gridGame{
  display:grid;
  grid-template-columns: 1fr 1fr 1fr 1fr 1fr;
  gap: 1rem;
  margin-top: 1rem;
}

.circuloGame {
  position: relative;

}

.circuloGame img{
  border-radius: 50%;
  display:block;
  box-shadow: 2px 2px 10px 3px;
  width:120px;
  cursor: pointer;

}

/* Tazos que giran. El circuloGame que envuelve en un div a las 2 opciones de imagen(cara y reverso) tiene una posici'on relativa de padre. de este modo las dos opciones podran estar en el mismo lugar a la vez. 
Cara tendra la posicion absoluta que hara que se posicion por encima del reverso. y una tranformacion de eje Y de 90 grados, boca abajo, tapada. para ponerla boca arriba, se le aplicar'a la clase girado, que le da una rotacion Y. esa clase se le aplicara si cumple una de las condiciones previamente definidas en el componente Tazo. de si la imagen es igual a la firsttry, secondTry o a matched */
.circuloGame .cara {
  transform:rotateY(90deg);
  position:absolute;
}

.girado .cara{
  transform:rotateY(0deg);
  transition-delay: 0.2s;
}

.circuloGame .reverso{
  transition: all ease-in-out 0.2s;
  transition-delay:0.2s;
}

.girado .reverso{
  transform: rotateY(90deg);
  transition-delay:0s;
}

.contador {
  display:inline-block;
  margin: 0 auto 2rem 10rem;
}

.img-ash {
  position:absolute;
  height: 20rem;
  left:2rem;
  top: 2rem
}


.img-ash-pikachu{
  position:absolute;
  height: 20rem;
  margin-top:20rem;
  bottom: 1rem;
  right: 2rem;
}